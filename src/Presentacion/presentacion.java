/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Logica.Condicion;
import Logica.Hipotesis;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author sebastian
 */
public class presentacion extends javax.swing.JFrame {

    Hipotesis objHip = new Hipotesis();
    Condicion objCond = new Condicion();
    int n=1;

    ArrayList<Hipotesis> listaDeHipotesis = new ArrayList();
    
    private DefaultListModel modeloReglas = new DefaultListModel();
    private DefaultListModel modeloHechos = new DefaultListModel();

    /**
     * Creates new form presentacion
     */
    public presentacion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnAbrirArchivo = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtArchivoCargado = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaHipotesis = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaCondiciones = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListaReglasEjecutadas = new javax.swing.JList();
        btn_comenzarInferencia = new javax.swing.JButton();
        btn_nuevaInferencia = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ListaBaseHechos = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTAreaProcedimiento = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inferencia hacia atras");
        setMinimumSize(new java.awt.Dimension(1124, 540));

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(815, 466));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        btnAbrirArchivo.setText("Abrir Archivo");
        btnAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirArchivoActionPerformed(evt);
            }
        });

        txtArchivoCargado.setEditable(false);
        txtArchivoCargado.setColumns(20);
        txtArchivoCargado.setRows(5);
        jScrollPane2.setViewportView(txtArchivoCargado);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnAbrirArchivo)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAbrirArchivo)
                        .addGap(0, 380, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Abrir Archivo", jPanel1);

        ListaHipotesis.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListaHipotesisValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListaHipotesis);

        jScrollPane3.setViewportView(ListaCondiciones);

        jScrollPane4.setViewportView(ListaReglasEjecutadas);

        btn_comenzarInferencia.setText("Comenzar Inferencia");
        btn_comenzarInferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_comenzarInferenciaActionPerformed(evt);
            }
        });

        btn_nuevaInferencia.setText("Nueva Inferencia");
        btn_nuevaInferencia.setEnabled(false);
        btn_nuevaInferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevaInferenciaActionPerformed(evt);
            }
        });

        jLabel1.setText("Escoja una Hipotesis");

        jLabel2.setText("Base de Hechos");

        jLabel3.setText("Reglas Ejecutadas");

        jScrollPane5.setViewportView(ListaBaseHechos);

        jLabel4.setText("Condiciones");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(106, 106, 106)
                                .addComponent(jLabel1)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(133, 133, 133)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(57, 57, 57)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(48, 48, 48))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_nuevaInferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_comenzarInferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane5)
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addComponent(btn_comenzarInferencia)
                .addGap(11, 11, 11)
                .addComponent(btn_nuevaInferencia)
                .addGap(21, 21, 21))
        );

        jTabbedPane1.addTab("Inferir Hacia Atrás", jPanel2);

        jTAreaProcedimiento.setEditable(false);
        jTAreaProcedimiento.setColumns(20);
        jTAreaProcedimiento.setRows(5);
        jScrollPane6.setViewportView(jTAreaProcedimiento);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(527, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Procedimiento", jPanel3);

        jMenu1.setText("Archivo");
        jMenu1.setMargin(new java.awt.Insets(0, 5, 0, 5));

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Salir");
        jMenu2.setMargin(new java.awt.Insets(0, 5, 0, 5));

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
       ArrayList<Condicion> listaDeCondiciones = new ArrayList();
        String file = null;
        String linea1, linea2, linea3, Valor = null, Descripcion = null;
        String AtributoCondicion = null, ValorCondicion = null;
        String AtributoHipotesis = null, ValorHipotesis = null;
        int i, j, k, m, contador = 0;

        JFileChooser dlg = new JFileChooser();
        int option = dlg.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            file = dlg.getSelectedFile().getPath();//me vota la ruta del archivo

        }

        try {

            FileReader f1;
            BufferedReader entrada1;

            f1 = new FileReader(file);
            entrada1 = new BufferedReader(f1);
            linea1 = entrada1.readLine();

            while (linea1 != null) {

                i = linea1.indexOf(";");
                Hipotesis aux = new Hipotesis();
                Condicion aux1 = new Condicion();

                Valor = linea1.substring(0, i);

                if (Valor.equals("Condicion")) {
                    linea2 = entrada1.readLine();

                    k = linea2.indexOf("=");
                    AtributoCondicion = linea2.substring(0, k);
                    ValorCondicion = linea2.substring(k + 1, linea2.length() - 1);

                    linea3 = entrada1.readLine();
                    m = linea3.indexOf(":");
                    Descripcion = linea3.substring(m + 1, linea3.length() - 1);

                    if (AtributoCondicion != null && ValorCondicion != null) {
                        contador = contador + 1;
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Condicion " + contador + ":\n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + AtributoCondicion + " = ");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + ValorCondicion + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Descripcion: " + Descripcion + " \n");

                        aux1.setNumero(contador);
                        aux1.setAtributo(AtributoCondicion);
                        aux1.setValor(ValorCondicion);
                        aux1.setDescripcion(Descripcion);
                        listaDeCondiciones.add(aux1);

                    }

                }

                if (Valor.equals("Hipotesis")) {
                    contador = 0;
                    linea2 = entrada1.readLine();

                    k = linea2.indexOf("=");
                    AtributoHipotesis = linea2.substring(0, k);
                    ValorHipotesis = linea2.substring(k + 1, linea2.length() - 1);

                    linea3 = entrada1.readLine();
                    m = linea3.indexOf(":");
                    Descripcion = linea3.substring(m + 1, linea3.length() - 1);

                    if (AtributoHipotesis != null && ValorHipotesis != null) {
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Hipotesis:\n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + AtributoHipotesis + " = ");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + ValorHipotesis + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Descripcion: " + Descripcion + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "===================================== \n");

                        aux.setAtributo(AtributoHipotesis);
                        aux.setValor(ValorHipotesis);
                        aux.setDescripcion(Descripcion);
                        aux.setCondiciones(listaDeCondiciones);

                        listaDeHipotesis.add(aux);

                        // listaDeCondiciones.clear(); 
                        listaDeCondiciones = new ArrayList();

                    }

                }

                linea1 = entrada1.readLine();

            }

            int h = 0;

            while (h < listaDeHipotesis.size()) {

                for (int v = 0; v < listaDeHipotesis.size(); v++) {
                    objHip = listaDeHipotesis.get(h);

                    for (int c = 0; c < listaDeHipotesis.get(v).getCondiciones().size(); c++) {

                        objCond = listaDeHipotesis.get(v).getCondiciones().get(c);

                        if (objHip.getAtributo().equals(objCond.getAtributo()) && objHip.getValor().equals(objCond.getValor())) {

                            objCond.setHipotesis(true);
                            //System.out.println(objCond.getAtributo() + " = " + objCond.getValor());
                        }

                    }
                }
                h++;
            }

        } catch (IOException e1) {
            System.out.println(e1.toString());
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btnAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirArchivoActionPerformed

        ArrayList<Condicion> listaDeCondiciones = new ArrayList();
        String file = null;
        String linea1, linea2, linea3, Valor = null, Descripcion = null;
        String AtributoCondicion = null, ValorCondicion = null;
        String AtributoHipotesis = null, ValorHipotesis = null;
        int i, j, k, m, contador = 0;

        JFileChooser dlg = new JFileChooser();
        int option = dlg.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            file = dlg.getSelectedFile().getPath();//me vota la ruta del archivo

        }

        try {

            FileReader f1;
            BufferedReader entrada1;

            f1 = new FileReader(file);
            entrada1 = new BufferedReader(f1);
            linea1 = entrada1.readLine();

            while (linea1 != null) {

                i = linea1.indexOf(";");
                Hipotesis aux = new Hipotesis();
                Condicion aux1 = new Condicion();

                Valor = linea1.substring(0, i);

                if (Valor.equals("Condicion")) {
                    linea2 = entrada1.readLine();

                    k = linea2.indexOf("=");
                    AtributoCondicion = linea2.substring(0, k);
                    ValorCondicion = linea2.substring(k + 1, linea2.length() - 1);

                    linea3 = entrada1.readLine();
                    m = linea3.indexOf(":");
                    Descripcion = linea3.substring(m + 1, linea3.length() - 1);

                    if (AtributoCondicion != null && ValorCondicion != null) {
                        contador = contador + 1;
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Condicion " + contador + ":\n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + AtributoCondicion + " = ");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + ValorCondicion + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Descripcion: " + Descripcion + " \n");

                        aux1.setNumero(contador);
                        aux1.setAtributo(AtributoCondicion);
                        aux1.setValor(ValorCondicion);
                        aux1.setDescripcion(Descripcion);
                        listaDeCondiciones.add(aux1);

                    }

                }

                if (Valor.equals("Hipotesis")) {
                    contador = 0;
                    linea2 = entrada1.readLine();

                    k = linea2.indexOf("=");
                    AtributoHipotesis = linea2.substring(0, k);
                    ValorHipotesis = linea2.substring(k + 1, linea2.length() - 1);

                    linea3 = entrada1.readLine();
                    m = linea3.indexOf(":");
                    Descripcion = linea3.substring(m + 1, linea3.length() - 1);

                    if (AtributoHipotesis != null && ValorHipotesis != null) {
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Hipotesis:\n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + AtributoHipotesis + " = ");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + ValorHipotesis + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "Descripcion: " + Descripcion + " \n");
                        this.txtArchivoCargado.setText(txtArchivoCargado.getText() + "===================================== \n");

                        aux.setAtributo(AtributoHipotesis);
                        aux.setValor(ValorHipotesis);
                        aux.setDescripcion(Descripcion);
                        aux.setCondiciones(listaDeCondiciones);

                        listaDeHipotesis.add(aux);

                        // listaDeCondiciones.clear(); 
                        listaDeCondiciones = new ArrayList();

                    }

                }

                linea1 = entrada1.readLine();

            }

            int h = 0;

            while (h < listaDeHipotesis.size()) {

                for (int v = 0; v < listaDeHipotesis.size(); v++) {
                    objHip = listaDeHipotesis.get(h);

                    for (int c = 0; c < listaDeHipotesis.get(v).getCondiciones().size(); c++) {

                        objCond = listaDeHipotesis.get(v).getCondiciones().get(c);

                        if (objHip.getAtributo().equals(objCond.getAtributo()) && objHip.getValor().equals(objCond.getValor())) {

                            objCond.setHipotesis(true);
                            //System.out.println(objCond.getAtributo() + " = " + objCond.getValor());
                        }

                    }
                }
                h++;
            }

        } catch (IOException e1) {
            System.out.println(e1.toString());
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_btnAbrirArchivoActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        //Control de las pestañas!
        int tab = jTabbedPane1.getSelectedIndex();
        switch (tab) {
            case 0: //Pestaña: Abrir archivo

                break;
            case 1: //Pestaña: Inferencia hacia atras
                tabInferencia();
                break;
            case 2://Pestaña: Busqueda

                break;
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void ListaHipotesisValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListaHipotesisValueChanged
        int n;
        if (ListaHipotesis.getSelectedIndex() == -1) {
            n = 0;
            ListaHipotesis.setSelectedIndex(0);
        }

        n = ListaHipotesis.getSelectedIndex();
        DefaultListModel modelo = new DefaultListModel();

        for (int j = 0; j < listaDeHipotesis.get(n).getCondiciones().size(); j++) {
            modelo.addElement(listaDeHipotesis.get(n).getCondiciones().get(j).getNumero() + ". "
                + listaDeHipotesis.get(n).getCondiciones().get(j).getAtributo() + " = "
                + listaDeHipotesis.get(n).getCondiciones().get(j).getValor());

        }

        ListaCondiciones.setModel(modelo);
    }//GEN-LAST:event_ListaHipotesisValueChanged

    private void btn_comenzarInferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_comenzarInferenciaActionPerformed
        try{
        btn_comenzarInferencia.setEnabled(false);

        Hipotesis aux = listaDeHipotesis.get(ListaHipotesis.getSelectedIndex());
        String texto=jTAreaProcedimiento.getText()+n+"- La hipostesis es: "+aux.getAtributo()+"="+aux.getValor();
        jTAreaProcedimiento.setText(texto);
        n++;
        
        modeloReglas = new DefaultListModel();
        modeloHechos = new DefaultListModel();
        
        verificarCondiciones(aux,1,1);
        
        ListaBaseHechos.setModel(modeloHechos);
        ListaReglasEjecutadas.setModel(modeloReglas);
        
        btn_nuevaInferencia.setEnabled(true);
        }
        catch(Exception e){
            System.out.println("Error: "+e);
            btn_comenzarInferencia.setEnabled(true);
            btn_nuevaInferencia.setEnabled(false);
        }
    }//GEN-LAST:event_btn_comenzarInferenciaActionPerformed

    private void btn_nuevaInferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevaInferenciaActionPerformed
        btn_nuevaInferencia.setEnabled(false);
        btn_comenzarInferencia.setEnabled(true);
        jTAreaProcedimiento.setText("");
        n=1;
        ListaBaseHechos.setListData(new String[0]);
        ListaReglasEjecutadas.setListData(new String[0]);
    }//GEN-LAST:event_btn_nuevaInferenciaActionPerformed

    private boolean verificarCondiciones(Hipotesis aux, int indexHec, int indexReg){
        
        boolean bandera = true; //En caso de que alguna condicion no se cumpla pasará a falso
        int tempindex = indexReg - 1; 
        modeloReglas.addElement(indexReg+". "+aux.getAtributo()+" = "+aux.getValor());

        for (Condicion condicion : aux.getCondiciones()) {
            
            if(condicion.isHipotesis()){ //Si la condición es una hipotesis a su vez.
                for (Hipotesis hip : listaDeHipotesis){
                    if(hip.getAtributo().equals(condicion.getAtributo())){
                        indexReg++;
                        String texto=jTAreaProcedimiento.getText()+"\n"+n+"- Esta condicion es a su vez hipotesis, verifico que se cumpla: "+hip.getAtributo()+"="+hip.getValor();
                        jTAreaProcedimiento.setText(texto);
                        n++;
                        boolean temp = verificarCondiciones(hip,indexHec,indexReg);
                        indexHec = indexHec + hip.getCondiciones().size();
                        if(!temp){
                            bandera = false;
                        }
                        break;
                    }
                }
            }
            else{
                boolean flag = true; //Valida que no se ingresen numeros o texto vacio
                while (flag) {
                    String respuesta = JOptionPane.showInputDialog(this, "<html><b> Condición: </b>" + condicion.getAtributo() + "</html>" + "\n" + "<html><b>Descripción: </b>" + condicion.getDescripcion() + "</html>", "Inferencia hacia atrás", JOptionPane.INFORMATION_MESSAGE);
                    String texto2=jTAreaProcedimiento.getText()+"\n"+n+"- Verifico la condicion : "+condicion.getAtributo()+"="+condicion.getValor();
                    jTAreaProcedimiento.setText(texto2);
                    n++;
                    if (respuesta.equals("")) {
                        JOptionPane.showMessageDialog(this, "Ingrese un valor válido.", "Información", JOptionPane.ERROR_MESSAGE);
                    } else {
                        flag = false;
                        if(!respuesta.equals(condicion.getValor())){
                            bandera = false;
                            String texto3=jTAreaProcedimiento.getText()+"\n"+n+"- La condicion : "+condicion.getAtributo()+"="+condicion.getValor()+" no se cumple";
                            jTAreaProcedimiento.setText(texto3);
                            n++;
                        }
                        else{
                            String texto3=jTAreaProcedimiento.getText()+"\n"+n+"- La condicion : "+condicion.getAtributo()+"="+condicion.getValor()+" se cumple";
                            jTAreaProcedimiento.setText(texto3);
                            n++;                        
                        }
                        modeloHechos.addElement(indexHec+". "+condicion.getAtributo()+" = "+respuesta);
                        indexHec++;
                    }
                } //Fin while
            } //Fin else
        } //Fin for
        
        System.out.println("El resultado es: "+bandera);
        if(bandera){
            modeloReglas.set(tempindex, modeloReglas.get(tempindex)+" \t(Cumple)");
            String texto=jTAreaProcedimiento.getText()+"\n"+n+"- La hiposetis "+aux.getAtributo()+"="+aux.getValor()+" se cumple";
            jTAreaProcedimiento.setText(texto);
            n++;
        }
        else{
            modeloReglas.set(tempindex, modeloReglas.get(tempindex)+" \t(No cumple)");
            String texto=jTAreaProcedimiento.getText()+"\n"+n+"- La hiposetis "+aux.getAtributo()+"="+aux.getValor()+" no se cumple";
            jTAreaProcedimiento.setText(texto);
            n++;
        }
        
        return bandera; 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(presentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(presentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(presentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(presentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new presentacion().setVisible(true);
            }
        });
    }

    private void tabInferencia() {
        
        DefaultListModel modelo = new DefaultListModel();

        for (int i = 0; i < listaDeHipotesis.size(); i++) {
            modelo.addElement((i + 1) + ". " + listaDeHipotesis.get(i).getAtributo() + " = " + listaDeHipotesis.get(i).getValor());
        }

        ListaHipotesis.setModel(modelo);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListaBaseHechos;
    private javax.swing.JList ListaCondiciones;
    private javax.swing.JList ListaHipotesis;
    private javax.swing.JList ListaReglasEjecutadas;
    private javax.swing.JButton btnAbrirArchivo;
    private javax.swing.JButton btn_comenzarInferencia;
    private javax.swing.JButton btn_nuevaInferencia;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextArea jTAreaProcedimiento;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea txtArchivoCargado;
    // End of variables declaration//GEN-END:variables
}
